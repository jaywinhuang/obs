Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 64, in login_auth
    username = request.json['username']
TypeError: 'NoneType' object has no attribute '__getitem__'

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 66, in login_auth
    user = Users.query.filter_by(username=username).first()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 421, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 400, in _inspect_mapped_class
    mapper._configure_all()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1223, in _configure_all
    configure_mappers()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 2873, in configure_mappers
    mapper._post_configure_properties()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1766, in _post_configure_properties
    prop.init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.py", line 184, in init
    self.do_init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1654, in do_init
    self._setup_join_conditions()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1729, in _setup_join_conditions
    can_be_synced_fn=self._columns_are_mapped
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1996, in __init__
    self._determine_joins()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 2123, in _determine_joins
    % self.prop)
AmbiguousForeignKeysError: Could not determine join condition between parent/child tables on relationship Account.transfers - there are multiple foreign key paths linking the tables.  Specify the 'foreign_keys' argument, providing a list of those columns which should be counted as containing a foreign key reference to the parent table.

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 66, in login_auth
    user = Users.query.filter_by(username=username).first()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 421, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 400, in _inspect_mapped_class
    mapper._configure_all()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1223, in _configure_all
    configure_mappers()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 2870, in configure_mappers
    raise e
InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper|Account|account'. Original exception was: Could not determine join condition between parent/child tables on relationship Account.transfers - there are multiple foreign key paths linking the tables.  Specify the 'foreign_keys' argument, providing a list of those columns which should be counted as containing a foreign key reference to the parent table.

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 66, in login_auth
    user = Users.query.filter_by(user_name=username).first()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 421, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 400, in _inspect_mapped_class
    mapper._configure_all()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1223, in _configure_all
    configure_mappers()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 2873, in configure_mappers
    mapper._post_configure_properties()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1766, in _post_configure_properties
    prop.init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.py", line 184, in init
    self.do_init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1654, in do_init
    self._setup_join_conditions()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1729, in _setup_join_conditions
    can_be_synced_fn=self._columns_are_mapped
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1996, in __init__
    self._determine_joins()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 2123, in _determine_joins
    % self.prop)
AmbiguousForeignKeysError: Could not determine join condition between parent/child tables on relationship Account.transfers - there are multiple foreign key paths linking the tables.  Specify the 'foreign_keys' argument, providing a list of those columns which should be counted as containing a foreign key reference to the parent table.

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 66, in login_auth
    user = Users.query.filter_by(username=username).first()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 421, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/base.py", line 400, in _inspect_mapped_class
    mapper._configure_all()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1223, in _configure_all
    configure_mappers()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 2873, in configure_mappers
    mapper._post_configure_properties()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py", line 1766, in _post_configure_properties
    prop.init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.py", line 184, in init
    self.do_init()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1654, in do_init
    self._setup_join_conditions()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1729, in _setup_join_conditions
    can_be_synced_fn=self._columns_are_mapped
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 1996, in __init__
    self._determine_joins()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py", line 2123, in _determine_joins
    % self.prop)
AmbiguousForeignKeysError: Could not determine join condition between parent/child tables on relationship Transfer.from_account_class - there are multiple foreign key paths linking the tables.  Specify the 'foreign_keys' argument, providing a list of those columns which should be counted as containing a foreign key reference to the parent table.

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 68, in login_auth
    login_user(user)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask_login/utils.py", line 140, in login_user
    user_id = getattr(user, current_app.login_manager.id_attribute)()
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/models.py", line 24, in get_id
    return unicode(self.id)
AttributeError: 'Users' object has no attribute 'id'

test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
test logging
Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 109, in get_transactions
    transactions = db.session.query(Transaction).filter(account_num=account_num).all()
TypeError: filter() got an unexpected keyword argument 'account_num'

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 109, in get_transactions
    transactions = db.session.query(Transaction).filter(account_num=account_num).all()
TypeError: filter() got an unexpected keyword argument 'account_num'

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 109, in get_transactions
    transactions = db.session.query(Transaction).filter(account_num=account_num).all()
TypeError: filter() got an unexpected keyword argument 'account_num'

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 109, in get_transactions
    transactions = db.session.query(Transaction).filter(account_num=account_num1)
TypeError: filter() got an unexpected keyword argument 'account_num'

Traceback (most recent call last):
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/devobs/views.py", line 110, in get_transactions
    result['data'] = jsonify(transactions)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask/json.py", line 263, in jsonify
    (dumps(data, indent=indent, separators=separators), '\n'),
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask/json.py", line 123, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py", line 250, in dumps
    sort_keys=sort_keys, **kw).encode(obj)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/Users/jiemin/Documents/cmu/tasks/task06_SoftwareDesign/back-end/obs-v2/flask-env/lib/python2.7/site-packages/flask/json.py", line 80, in default
    return _json.JSONEncoder.default(self, o)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: <flask_sqlalchemy.BaseQuery object at 0x1117e07d0> is not JSON serializable

